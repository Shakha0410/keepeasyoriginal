// employees.module.scss

@mixin sp-layout {
  @media screen and (max-width: 750px) {
    @content;
  }
}
.employeesContainer {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}
.title{
  font-weight: 600;
  font-size: 50px;
  line-height: 128.4%;
  letter-spacing: 0.035em;
  text-shadow: 0px 0px 14px rgba(32, 35, 218, 0.811);
  margin-left: 40%;
  margin-top: 20px;
}

.goBackContainer {
  position: absolute;
  top: 20px;
  left: 20px;
  z-index: 1;
}

.goBackButton {
  display: inline-flex;
  align-items: center;
  background-color: #fff;
  border: none;
  padding: 10px 30px;
  font-size: 14px;
  cursor: pointer;
  text-decoration: none;
  color: #333;

  svg {
    margin-right: 10px;
  }

  &:hover {
    background-color: #f7f7f7;
  }
}

.employeeCard {
  margin: 20px;
  width: 300px;
  // height: 800px;
  background-color: #fff;
  border: 1px solid #ddd;
z-index: 9;
  padding: 20px;
  box-shadow: 0 0 10px rgba(47, 57, 241, 0.97);
  height: fit-content;
  
}

.employeeCard:hover {
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
  transform: translateY(-10px);
}

.employeeCard img {
  width: 100%;
  height: 70%;
  object-fit: cover;
  border-radius: 8px;
}

.employeeCard h2 {
  margin-top: 0;
}

.employeeCard p {
  margin-bottom: 20px;
}
@function random_range($min, $max) {
  $rand: random();
  $random_range: $min + floor($rand * (($max - $min) + 1));
  @return $random_range;
}

.stars {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 120%;
  transform: rotate(-45deg);
}

.star {
  $star-count: 50;
  --star-color: var(--primary-color);
  --star-tail-length: 6em;
  --star-tail-height: 2px;
  --star-width: calc(var(--star-tail-length) / 6);
  --fall-duration: 9s;
  --tail-fade-duration: var(--fall-duration);

  position: absolute;
  top: var(--top-offset);
  left: 0;
  width: var(--star-tail-length);
  height: var(--star-tail-height);
  color: var(--star-color);
  background: linear-gradient(45deg, currentColor, transparent);
  border-radius: 50%;
  filter: drop-shadow(0 0 6px currentColor);
  transform: translate3d(104em, 0, 0);
  animation: fall var(--fall-duration) var(--fall-delay) linear infinite, tail-fade var(--tail-fade-duration) var(--fall-delay) ease-out infinite;
  
  @include sp-layout {
    // For mobile performance, tail-fade animation will be removed QAQ
    animation: fall var(--fall-duration) var(--fall-delay) linear infinite;
  }

  @for $i from 1 through $star-count {
    &:nth-child(#{$i}) {
      --star-tail-length: #{random_range(500em, 750em) / 100};
      --top-offset: #{random_range(0vh, 10000vh) / 100};
      --fall-duration: #{random_range(6000, 12000s) / 1000};
      --fall-delay: #{random_range(0, 10000s) / 1000};
    }
  }

  &::before, &::after {
    position: absolute;
    content: '';
    top: 0;
    left: calc(var(--star-width) / -2);
    width: var(--star-width);
    height: 100%;
    background: linear-gradient(45deg, transparent, currentColor, transparent);
    border-radius: inherit;
    animation: blink 2s linear infinite;
  }

  &::before {
    transform: rotate(45deg);
  }

  &::after {
    transform: rotate(-45deg);
  }
}

@keyframes fall {
  to {
    transform: translate3d(-30em, 0, 0);
  }
}

@keyframes tail-fade {
  0%, 50% {
    width: var(--star-tail-length);
    opacity: 1;
  }

  70%, 80% {
    width: 0;
    opacity: 0.4;
  }

  100% {
    width: 0;
    opacity: 0;
  }
}

@keyframes blink {
  50% {
    opacity: 0.6;
  }
}